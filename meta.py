import subprocess, os, sys
from datetime import datetime

author = "Default"
manual = False

def get_type(file_path, name):
    name = str()
    name = name.lower()
    type = "shared"
    if name == "client":
        return "client"
    elif name == "server":
        return "server"

    if name.startswith('c_'):
        return "client"
    elif name.startswith('s_'):
        return "server"

    folders = [folder.lower() for folder in file_path.split("\\")]
    if "client" in folders:
        return "client"
    elif "server" in folders:
        return "server"
    if manual:
        type = input("Choose type for " + file_path + os.sep + name)
        if "client".find(type) >= 0:
            return "client"
        elif "server".find(type) >= 0:
            return "server"
    else:
        return "shared"

if len(sys.argv) > 1 and os.path.isdir(sys.argv[1]):
    os.chdir(sys.argv[1])
    with open("meta-generated.xml", "w+") as meta_file:
        meta_file.truncate(0) 
        meta_file.write("<meta>" + "\n")
        name = os.path.basename(sys.argv[1])
        meta_file.write("\t" + "<info name=\"" + name +"\" description=\"Generated by MTA-Resource-Tool\" author=\"" + "Default" + "\"/>" + "\n")
        for subdir, dirs, files in os.walk(sys.argv[1]):
            folders = subdir.split("\\")
            if not folders[-1].startswith('.'): #ignoring .git and etc. basically
                for file in files:
                    file_path = os.path.join(subdir, file)
                    file_path = file_path.replace(sys.argv[1] + os.sep, "")
                    name, ext = os.path.splitext(file)
                    if ext == ".lua" or ext == ".luac":
                        type = get_type(file_path, name)
                        meta_file.write("\t" + "<script src=\"" + file_path + "\" type=\"" + type + "\"/>" + "\n")
                    else:
                        meta_file.write("\t" + "<file src=\"" + file_path + "\"/>" + "\n")
        meta_file.write("</meta>")
else:
    sys.exit("ERROR: No file or directory specified!")